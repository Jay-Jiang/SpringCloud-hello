<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.demo.springcloud</groupId>
    <artifactId>spring-cloud-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <!--父工程必须是 pom 类型-->
    <packaging>pom</packaging>

    <modules>
        <module>spring-cloud-api</module>
        <module>spring-cloud-consumer-80</module>
        <module>spring-cloud-eureka-server-7001</module>
        <module>spring-cloud-eureka-server-7002</module>
        <module>spring-cloud-eureka-server-7003</module>
        <module>spring-cloud-provider-8001</module>
        <module>spring-cloud-provider-8002</module>
        <module>spring-cloud-provider-8003</module>
        <module>spring-cloud-consumer-feign</module>
        <module>spring-cloud-provider-hystrix-8004</module>
    </modules>

    <!--定义属性-->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <spring.cloud.version>Finchley.RELEASE</spring.cloud.version>
        <spring.boot.version>2.0.6.RELEASE</spring.boot.version>

        <junit.version>4.12</junit.version>
        <log4j.version>1.2.17</log4j.version>
    </properties>

    <!--在父工程中，进行依赖版本的统一管理-->
    <dependencyManagement>
        <dependencies>
            <!--spring cloud-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring.cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--spring boot-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!--mysql-->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>5.1.38</version>
            </dependency>
            <!--druid-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.1.10</version>
            </dependency>
            <!--mybatis-->
            <dependency>
                <groupId>org.mybatis.spring.boot</groupId>
                <artifactId>mybatis-spring-boot-starter</artifactId>
                <version>1.3.2</version>
            </dependency>
            <!--logback-->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>1.2.3</version>
            </dependency>
            <!--log4j-->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!--单元测试-->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!--热部署-->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>springloaded</artifactId>
                <version>1.2.0.RELEASE</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--项目构建-->
    <build>
        <finalName>spring-cloud-parent</finalName>
        <!--允许构建时，读取所有指定目录下的文件（配置信息）-->
        <resources>
            <resource>
                <!--指定目录-->
                <directory>src/main/resources</directory>
                <!--开启过滤-->
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!--进行过滤操作的插件-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <!--配置过滤操作规则-->
                <configuration>
                    <!--过滤筛选以 $ 为分隔符的字段（实现 $ 的赋值操作）-->
                    <!--如 $project.artifactId$ -->
                    <delimiters>
                        <delimit>$</delimit>
                    </delimiters>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

